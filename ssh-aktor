#!/bin/bash

#Check if the USER 
if [[ -z $1 ]]; then
    echo "A USERNAME must be provided. See the sample bellow:"
    echo "./ssh-aktor coderunner"
    exit
else
    USER=$1
fi

#Create a random user password
PASS=$(openssl passwd -6 $USER)

#Add a user to the system with a random PASS
useradd -p $PASS $USER

#Create the user home directory and .ssh folder
mkdir -p /home/$USER/.ssh

#Switch to the user home directory
cd /home/$USER/.ssh

#Create the key pair inside the user directory
ssh-keygen -f $USER -m PEM -q -N ""

#Add the Public key to the authorized_keys
cat $USER.pub > ./authorized_keys

#Make the user the owner of its home directory
chown -R $USER:$USER /home/$USER

#Copy the key to the root of your logged user home
cp /home/$USER/.ssh/$USER ~/$USER.key

#Change the file attributes to only be readable by its owner
chmod 400 ~/$USER.key

#Echo a message 
printf 'The \e[1;34m%-6s\e[m user private key is:\n\n' "$USER" 

#Show the private key
cat /home/$USER/.ssh/$USER

printf "The \e[1;34m$USER\e[m user private key is available at: $HOME/$USER.key\n\n"
printf "To test the \e[1;34m$USER\e[m user private key, run the following:\n\n"
printf "     ssh -o StrictHostKeyChecking=no -i $HOME/$USER.key $USER@localhost\n\n"